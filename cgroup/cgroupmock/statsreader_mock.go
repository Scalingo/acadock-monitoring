// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/acadock-monitoring/cgroup (interfaces: StatsReader)

// Package cgroupmock is a generated GoMock package.
package cgroupmock

import (
	context "context"
	reflect "reflect"

	cgroup "github.com/Scalingo/acadock-monitoring/v2/cgroup"
	gomock "github.com/golang/mock/gomock"
)

// MockStatsReader is a mock of StatsReader interface.
type MockStatsReader struct {
	ctrl     *gomock.Controller
	recorder *MockStatsReaderMockRecorder
}

// MockStatsReaderMockRecorder is the mock recorder for MockStatsReader.
type MockStatsReaderMockRecorder struct {
	mock *MockStatsReader
}

// NewMockStatsReader creates a new mock instance.
func NewMockStatsReader(ctrl *gomock.Controller) *MockStatsReader {
	mock := &MockStatsReader{ctrl: ctrl}
	mock.recorder = &MockStatsReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatsReader) EXPECT() *MockStatsReaderMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockStatsReader) GetStats(arg0 context.Context, arg1 string) (cgroup.Stats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", arg0, arg1)
	ret0, _ := ret[0].(cgroup.Stats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockStatsReaderMockRecorder) GetStats(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockStatsReader)(nil).GetStats), arg0, arg1)
}
